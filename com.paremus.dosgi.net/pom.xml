<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.paremus.dosgi</groupId>
		<artifactId>parent</artifactId>
		<version>1.1.0</version>
		<relativePath>../parent</relativePath>
	</parent>

	<artifactId>com.paremus.dosgi.net</artifactId>
	
	<name>The Paremus Net Remote Service Distribution Provider</name>
    <description>
        An implementation of OSGi Remote Service Admin, enhanced to
        provide support for OSGi Promises and streaming using OSGi
        PushStreams.
    </description>

	<dependencies>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>osgi.core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>osgi.cmpn</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>osgi.annotation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<dependency>
			<groupId>com.paremus.dosgi</groupId>
			<artifactId>com.paremus.dosgi.api</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.paremus.core</groupId>
			<artifactId>com.paremus.license</artifactId>
		</dependency>
		<dependency>
			<groupId>com.paremus.core</groupId>
			<artifactId>com.paremus.netty.tls</artifactId>
		</dependency>

		<dependency>
			<groupId>com.paremus.dosgi</groupId>
			<artifactId>com.paremus.dosgi.net.promise.v1</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-buffer</artifactId>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-codec</artifactId>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-common</artifactId>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-handler</artifactId>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-resolver</artifactId>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-transport</artifactId>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
		    <groupId>biz.aQute.bnd</groupId>
		    <artifactId>biz.aQute.bndlib</artifactId>
		    <version>4.3.0</version>
		    <scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.2.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack</id>
						<phase>process-classes</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.paremus.dosgi</groupId>
									<artifactId>com.paremus.dosgi.net.promise.v1</artifactId>
									<outputDirectory>${project.build.outputDirectory}</outputDirectory>
									<includes>com/paremus/dosgi/net/promise/*.class</includes>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- The exclusion fixes Eclipse, but not the command line -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<excludes>sun/misc/Unsafe.java</excludes>
				</configuration>
			</plugin>
			<!-- Deletes the sun.misc.Unsafe before it can be used -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>remove-unsafe</id>
						<phase>process-classes</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${project.build.outputDirectory}/sun</directory>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>biz.aQute.bnd</groupId>
				<artifactId>bnd-maven-plugin</artifactId>
			</plugin>
			<plugin>
                <artifactId>maven-source-plugin</artifactId>
                <configuration>
                    <excludes>sun/**</excludes>
                </configuration>
            </plugin>
			<plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <excludePackageNames>sun.misc</excludePackageNames>
                </configuration>
            </plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-clean-plugin
										</artifactId>
										<versionRange>
											[3.1.0,)
										</versionRange>
										<goals>
											<goal>clean</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute></execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
				    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <configuration>
                        <excludes>main/java/org/freshvanilla/**/*.java,main/java/sun/misc/*.java</excludes>
                    </configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
